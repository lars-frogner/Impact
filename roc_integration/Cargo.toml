[workspace]
members = ["roc_integration_macros"]

[workspace.package]
version = "0.1.0"
edition = "2024"
license = "Apache-2.0"

[workspace.lints.rust]
future_incompatible = "warn"
missing_debug_implementations = "warn"
nonstandard_style = "warn"
rust_2018_idioms = "warn"
unexpected_cfgs = "warn"

[workspace.lints.clippy]
too_many_arguments = "allow"
let_and_return = "allow"
multiple_bound_locations = "allow"
too_long_first_doc_paragrap = "allow"

cargo = { level = "warn", priority = -1 }
multiple_crate_versions = "allow"
cargo_common_metadata = "allow"

await_holding_lock = "warn"
box_collection = "warn"
cast_lossless = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
doc_markdown = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
exit = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
extend_with_drain = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_ok_or = "warn"
map_err_ignore = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
missing_enforced_import_renames = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_collect = "warn"
needless_continue = "warn"
needless_for_each = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
single_element_loop = "warn"
single_match_else = "warn"
string_add_assign = "warn"
string_add = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
unimplemented = "warn"
unnecessary_to_owned = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
zero_sized_map_values = "warn"

[package]
name = "roc_integration"
description = "Roc language integration with the Impact engine"
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }

build = "build.rs"

[features]
cli = ["dep:clap"]
roc_codegen = [
    "roc_integration_macros/roc_codegen",
    "dep:bitflags",
    "dep:blake3",
    "dep:chrono",
    "dep:inventory",
]

[dependencies]
anyhow = "1.0"
bitflags = { version = "2.6", optional = true }
blake3 = { version = "1.8", optional = true }
bytemuck = { version = "1.23", features = ["derive"] }
chrono = { version = "0.4", optional = true }
clap = { version = "4.5", features = ["derive"], optional = true }
const-fnv1a-hash = "1.1"
inventory = { version = "0.3", optional = true }
nalgebra = { version = "0.33", features = ["bytemuck"] }
rustc-hash = "2.1"

roc_integration_macros = { path = "roc_integration_macros" }

[build-dependencies]
vergen-gitcl = { version = "1.0", features = [] }

[lints]
workspace = true
