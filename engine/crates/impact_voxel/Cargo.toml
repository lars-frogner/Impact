[package]
name = "impact_voxel"
description = "Voxels for the Impact engine"
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }

build = "build.rs"

[features]
arbitrary = [
    "dep:arbitrary",
    "impact_ecs/arbitrary",
    "impact_gpu/arbitrary",
    "impact_math/arbitrary",
    "impact_physics/arbitrary",
    "impact_rendering/arbitrary",
]
ecs = [
    "dep:inventory",
    "dep:impact_ecs",
    "impact_geometry/ecs",
    "impact_physics/ecs",
    "impact_scene/ecs",
]
fuzzing = ["arbitrary"]
roc_codegen = ["dep:inventory", "roc_integration/roc_codegen"]
ron = ["dep:impact_io", "impact_io/ron", "serde"]
serde = ["dep:serde"]
unchecked = []

[dependencies]
anyhow = { workspace = true }
approx = { workspace = true }
arbitrary = { workspace = true, optional = true }
bitflags = { workspace = true }
bytemuck = { workspace = true }
cfg-if = { workspace = true }
glam = "0.30"
impact_assets = { path = "../impact_assets" }
impact_camera = { path = "../impact_camera" }
impact_containers = { path = "../impact_containers" }
impact_ecs = { path = "../impact_ecs", optional = true }
impact_geometry = { path = "../impact_geometry" }
impact_gpu = { path = "../impact_gpu" }
impact_io = { path = "../impact_io", optional = true }
impact_log = { path = "../impact_log" }
impact_material = { path = "../impact_material" }
impact_math = { path = "../impact_math" }
impact_mesh = { path = "../impact_mesh" }
impact_model = { path = "../impact_model" }
impact_physics = { path = "../impact_physics" }
impact_rendering = { path = "../impact_rendering" }
impact_scene = { path = "../impact_scene" }
inventory = { workspace = true, optional = true }
nalgebra = { workspace = true }
noise = "0.9"
num-traits = { workspace = true }
ordered-float = "5.0"
pastey = { workspace = true }
roc_integration = { path = "../../../roc_integration" }
serde = { workspace = true, optional = true }
tinyvec = { workspace = true }
twox-hash = { version = "2.1", default-features = false, features = [
    "xxhash64",
] }

[lints]
workspace = true
