[workspace]
members = [
    "impact_containers",
    "impact_ecs",
    "impact_ecs/impact_ecs_macros",
    "impact_math",
    "impact_profiling",
]

[workspace.package]
version = "0.1.0"
edition = "2024"

[workspace.dependencies]
anyhow = "1.0"
bitflags = "2.6"
bytemuck = { version = "1.22", features = ["derive"] }
const-fnv1a-hash = "1.1"
inventory = "0.3"
lazy_static = "1.5"
nalgebra = "0.33"
nohash-hasher = "0.2.0"
num-traits = "0.2"
paste = "1.0"
rand = "0.9"

[workspace.lints.rust]
future_incompatible = "warn"
missing_debug_implementations = "warn"
nonstandard_style = "warn"
rust_2018_idioms = "warn"
unexpected_cfgs = "warn"

[workspace.lints.clippy]
too_many_arguments = "allow"
let_and_return = "allow"
multiple_bound_locations = "allow"
too_long_first_doc_paragrap = "allow"

await_holding_lock = "warn"
box_collection = "warn"
cast_lossless = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
doc_markdown = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
exit = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
extend_with_drain = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_ok_or = "warn"
map_err_ignore = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
missing_enforced_import_renames = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_collect = "warn"
needless_continue = "warn"
needless_for_each = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
single_element_loop = "warn"
single_match_else = "warn"
string_add_assign = "warn"
string_add = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
unimplemented = "warn"
unnecessary_to_owned = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
zero_sized_map_values = "warn"

[package]
name = "impact"
version = { workspace = true }
edition = { workspace = true }

build = "build.rs"

[features]
cli = ["dep:clap"]
profiling = ["dep:criterion", "impact_profiling"]
arbitrary = ["dep:arbitrary", "impact_ecs/arbitrary", "impact_math/arbitrary"]
fuzzing = ["arbitrary"]
unchecked = []
roc_codegen = [
    "impact_containers/roc_codegen",
    "impact_ecs/roc_codegen",
    "impact_math/roc_codegen",
    "roc_integration/roc_codegen",
]

[dependencies]
anyhow = { workspace = true }
approx = "0.5"
arbitrary = { version = "1.3", features = ["derive"], optional = true }
atomic_enum = "0.3"
bitflags = { workspace = true, features = ["bytemuck"] }
bytemuck = { workspace = true }
cfg-if = "1.0"
chrono = "0.4"
clap = { version = "4.5", features = ["derive"], optional = true }
const-fnv1a-hash = { workspace = true }
criterion = { version = "0.5.1", optional = true }
egui-wgpu = "0.31"
glam = "0.30"
image = { version = "0.25", default-features = false, features = [
    "png",
    "jpeg",
] }
inventory = { workspace = true }
half = { version = "2.1", features = ["bytemuck"] }
lazy_static = { workspace = true }
log = "0.4"
naga = { version = "24.0", features = ["wgsl-out"] }
nalgebra = { workspace = true, features = ["bytemuck", "serde-serialize"] }
nohash-hasher = { workspace = true }
noise = "0.9.0"
num-derive = "0.4"
num-traits = { workspace = true }
ordered-float = "5.0"
paste = { workspace = true }
petgraph = { version = "0.7", default-features = false, features = [
    "graphmap",
] }
ply-rs = "0.1"
pollster = "0.4"
rand = { workspace = true }
regex = "1.10"
rmp-serde = "1.1"
ron = "0.9"
roots = "0.0.8"
serde = { version = "1.0", features = ["derive"] }
simba = "0.9"
tinyvec = { version = "1.9", features = ["alloc"] }
tobj = "4.0"
wgpu = { version = "24.0", features = ["naga-ir", "serde"] }
winit = { version = "0.30", features = ["serde"] }
xxhash-rust = { version = "0.8", features = ["xxh3"] }

impact_containers = { path = "impact_containers" }
impact_ecs = { path = "impact_ecs" }
impact_math = { path = "impact_math" }
impact_profiling = { path = "impact_profiling", optional = true }
roc_integration = { path = "../roc_integration" }

[dev-dependencies]
clap = { version = "4.5", features = ["derive"] }
criterion = "0.5.1"
pprof = { version = "0.14", features = ["criterion", "flamegraph"] }
naga = { version = "24.0", features = ["wgsl-in", "wgsl-out"] }
proptest = "1.5"

[lints]
workspace = true

[profile.release]
debug = "limited"

[[bin]]
name = "impact"
path = "src/bin/impact.rs"
required-features = ["cli"]

[[bench]]
name = "model"
harness = false
required-features = ["profiling"]

[[bench]]
name = "voxel"
harness = false
required-features = ["profiling"]

[[bench]]
name = "constraint"
harness = false
required-features = ["profiling"]
