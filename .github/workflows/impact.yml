name: Impact CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  # Keep Miri sysroot inside the workspace so the cache can pick it up
  MIRI_SYSROOT: ${{ github.workspace }}/.miri-sysroot

jobs:
  # ---------- 1. Fast debug & release builds ----------------------------------
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Re-use Cargo, target and Miri sysroot across jobs to speed things up
      - name: Cache Cargo & target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            .miri-sysroot
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@stable

      - name: Build (debug)
        working-directory: engine
        run: cargo build

      - name: Build (release)
        working-directory: engine
        run: cargo build --release

  # ---------- 2. Unit & integration tests -------------------------------------
  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            .miri-sysroot
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@stable

      - name: cargo test
        working-directory: engine
        run: cargo test --workspace

  # ---------- 3. Address-Sanitizer tests --------------------------------------
  test-asan:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src
          targets: x86_64-unknown-linux-gnu

      - name: Install AddressSanitizer runtime
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y clang libclang-rt-17-dev

      - name: cargo test (ASan)
        working-directory: engine
        env:
          ASAN_RUST_FLAGS: "-C linker=clang -Zsanitizer=address"
          RUSTFLAGS: ${{ env.ASAN_RUST_FLAGS }}
          RUSTDOCFLAGS: ${{ env.ASAN_RUST_FLAGS }}
        run: |
          cargo clean
          cargo test --workspace --target x86_64-unknown-linux-gnu

  # ---------- 4. Miri tests ----------------------------------------------------
  test-miri:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            .miri-sysroot
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri
          targets: x86_64-unknown-linux-gnu

      - name: cargo miri setup
        run: cargo miri setup

      - name: cargo miri test
        working-directory: engine
        env:
          PROPTEST_DISABLE_FAILURE_PERSISTENCE: 1
          PROPTEST_CASES: 1
          MIRIFLAGS: "-Zmiri-disable-isolation -Zmiri-deterministic-floats"
        run: |
          cargo clean
          cargo miri test --workspace
