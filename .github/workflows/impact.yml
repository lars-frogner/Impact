name: Impact CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  MIRI_SYSROOT: ${{ github.workspace }}/.miri-sysroot

# ───────────────────────────────────────────────────────────────
# 1. Build (debug + release) on Linux, macOS, Windows
# ───────────────────────────────────────────────────────────────
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            .miri-sysroot
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@stable

      - name: Build (debug)
        working-directory: engine
        run: cargo build

      - name: Build (release)
        working-directory: engine
        run: cargo build --release

  # ───────────────────────────────────────────────────────────────
  # 2. Regular tests (unit + integration) on all three OSes
  # ───────────────────────────────────────────────────────────────
  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            .miri-sysroot
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@stable

      - name: cargo test
        working-directory: engine
        run: cargo test --workspace

  # ───────────────────────────────────────────────────────────────
  # 3. AddressSanitizer tests (Linux + macOS only)
  # ───────────────────────────────────────────────────────────────
  test-asan:
    needs: build
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src
          targets: ${{ matrix.target }}

      # Runtime is already on macOS; install it only on Linux
      - name: Install AddressSanitizer runtime
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y clang libclang-rt-17-dev

      - name: cargo test (ASan)
        working-directory: engine
        env:
          ASAN_RUST_FLAGS: "-C linker=clang -Zsanitizer=address"
          RUSTFLAGS: ${{ env.ASAN_RUST_FLAGS }}
          RUSTDOCFLAGS: ${{ env.ASAN_RUST_FLAGS }}
        run: |
          cargo clean
          cargo test --workspace --target ${{ matrix.target }}

  # ───────────────────────────────────────────────────────────────
  # 4. Miri tests (all three OSes)
  # ───────────────────────────────────────────────────────────────
  test-miri:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            .miri-sysroot
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri

      - name: cargo miri setup
        run: cargo miri setup

      - name: cargo miri test
        working-directory: engine
        env:
          PROPTEST_DISABLE_FAILURE_PERSISTENCE: 1
          PROPTEST_CASES: 1
          MIRIFLAGS: "-Zmiri-disable-isolation -Zmiri-deterministic-floats"
        run: |
          cargo clean
          cargo miri test --workspace
